{"version":3,"sources":["node_modules/ol/src/events/EventType.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/source/State.js","node_modules/ol/src/util.js","node_modules/ol/src/renderer/Layer.js","scripts/customFunctions.js","scripts/Layers.js"],"names":["CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","IDLE","LOADING","LOADED","EMPTY","Disposable","constructor","disposed","dispose","disposeInternal","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","evt","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","length","found","a","b","includes","arr","obj","indexOf","linearFindNearest","direction","n","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","splice","find","func","value","equals","arr1","arr2","len1","stableSort","compareFnc","index","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","apply","assign","Object","var_sources","TypeError","output","ii","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","listen","opt_this","opt_once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","Observable","EventTarget","on","onInternal","once","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","UNDEFINED","READY","abstract","Error","uidCounter_","getUid","ol_uid","String","VERSION","LayerRenderer","layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","getFeatures","pixel","prepareFrame","frameState","renderFrame","loadedTileCallback","tiles","zoom","tile","tileCoord","toString","createLoadedTileFinder","projection","tileRange","callback","forEachLoadedTile","forEachFeatureAtCoordinate","coordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","getState","ImageState","renderIfReadyAndVisible","loadImage","image","imageState","load","getVisible","getSourceState","SourceState","require","default","map","$","mapLayers","getLayers","getLayerByName","layerName","forEach","lyr","get","layers","closer","dragElement","elmnt","pos1","pos2","pos3","pos4","dragMouseDown","e","window","clientX","clientY","document","onmouseup","closeDragElement","onmousemove","elementDrag","style","top","offsetTop","left","offsetLeft","getElementById","id","onmousedown","click","layersDiv","layersDivTitle","layersDivContent","html","css","element","append","prop","change","checkbox","setVisible","checked"],"mappings":"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","file":"Layers.84664ab8.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in desccending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return} CombinedOnSignature\n */\n\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.on = this.onInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.once = this.onceInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n     */\n    this.un = this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","const { default: LayerRenderer } = require(\"ol/src/renderer/Layer\");\r\n\r\nconst map = $('#Map').data('map');\r\nconst mapLayers=map.getLayers();\r\n\r\nexport function getLayerByName(layerName){\r\n     let layer = null;\r\n\r\n     mapLayers.forEach(lyr => {\r\n         if(lyr.get('name')===layerName)\r\n         layer=lyr;\r\n    \r\n     });\r\n     return layer;\r\n}","const { getLayerByName } = require(\"./customFunctions\");\r\n\r\nconst map=$('#Map').data('map');\r\nconst layers=map.getLayers();\r\n\r\nconst closer=$('#draggable-closer');\r\n\r\n$('#layers').click(function(){\r\nconst layersDiv=$('#draggable');\r\nconst layersDivTitle=$('#draggable-title');\r\nconst layersDivContent=$('#draggable-content');\r\nlayersDivTitle.html('Layers');\r\nlayersDivContent.html('');\r\nlayersDiv.css('display','block');\r\n\r\nlayers.forEach(layers => {\r\n  if (layers.get('name')){\r\n    const element = `<div class=\"form-check\">\r\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"${layers.get('name')}\">\r\n    <label class=\"form-check-label\" for=\"exampleCheck1\">${layers.get('name')}</label>\r\n    </div>`\r\n    layersDivContent.append(element);\r\n    $(`#${layers.get('name')}`).prop('checked',layers.getVisible());\r\n  }\r\n    \r\n});\r\n\r\n$('.form-check-input').change(function(){\r\n    const checkbox=this;\r\n    const layerName = checkbox.id;\r\n    const layer = getLayerByName(layerName);\r\n    // @ts-ignore\r\n    layer.setVisible(checkbox.checked);\r\n});\r\n\r\ncloser.click(function(){\r\n    $('#draggable').css('display','none')\r\n});\r\n\r\n});\r\n\r\n\r\n\r\n// Make the DIV element draggable:\r\ndragElement(document.getElementById(\"draggable\"));\r\n\r\nfunction dragElement(elmnt) {\r\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n  if (document.getElementById(elmnt.id + \"-header\")) {\r\n    // if present, the header is where you move the DIV from:\r\n    document.getElementById(elmnt.id + \"header\").onmousedown = dragMouseDown;\r\n  } else {\r\n    // otherwise, move the DIV from anywhere inside the DIV:\r\n    elmnt.onmousedown = dragMouseDown;\r\n  }\r\n\r\n  function dragMouseDown(e) {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // get the mouse cursor position at startup:\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    document.onmouseup = closeDragElement;\r\n    // call a function whenever the cursor moves:\r\n    document.onmousemove = elementDrag;\r\n  }\r\n\r\n  function elementDrag(e) {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // calculate the new cursor position:\r\n    pos1 = pos3 - e.clientX;\r\n    pos2 = pos4 - e.clientY;\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    // set the element's new position:\r\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\r\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\r\n  }\r\n\r\n  function closeDragElement() {\r\n    // stop moving when mouse button is released:\r\n    document.onmouseup = null;\r\n    document.onmousemove = null;\r\n  }\r\n}"]}